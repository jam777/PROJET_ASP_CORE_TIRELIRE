// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tirelire_Jamal.Data;

namespace Tirelire_Jamal.Migrations.TirelireDb
{
    [DbContext(typeof(Tirelire_JamContext))]
    partial class Tirelire_JamContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Tirelire_Jamal.Models.Adresse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdFacturation")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("AdLivraison")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Adresse");
                });

            modelBuilder.Entity("Tirelire_Jamal.Models.Avis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Idclient")
                        .HasColumnName("IDClient")
                        .HasColumnType("int");

                    b.Property<int>("Idproduit")
                        .HasColumnName("IDProduit")
                        .HasColumnType("int");

                    b.Property<bool?>("Valide")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("Idclient");

                    b.HasIndex("Idproduit");

                    b.ToTable("Avis");
                });

            modelBuilder.Entity("Tirelire_Jamal.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateNaissance")
                        .HasColumnName("Date_Naissance")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool>("Genre")
                        .HasColumnType("bit");

                    b.Property<int?>("Idadresse")
                        .HasColumnName("IDAdresse")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("Idadresse");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("Tirelire_Jamal.Models.Commande", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Commentaire")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("Idclient")
                        .HasColumnName("IDClient")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("Idclient");

                    b.ToTable("Commande");
                });

            modelBuilder.Entity("Tirelire_Jamal.Models.Couleur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Couleur");
                });

            modelBuilder.Entity("Tirelire_Jamal.Models.DetailCommande", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Idcommande")
                        .HasColumnName("IDCommande")
                        .HasColumnType("int");

                    b.Property<int>("Idproduit")
                        .HasColumnName("IDProduit")
                        .HasColumnType("int");

                    b.Property<double>("Prix")
                        .HasColumnType("float");

                    b.Property<int>("Quantite")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Idcommande");

                    b.HasIndex("Idproduit");

                    b.ToTable("DetailCommande");
                });

            modelBuilder.Entity("Tirelire_Jamal.Models.Fabricant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Fabricant");
                });

            modelBuilder.Entity("Tirelire_Jamal.Models.Produit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Capacite")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Disponible")
                        .HasColumnType("bit");

                    b.Property<double>("Frais")
                        .HasColumnType("float");

                    b.Property<double>("Hauteur")
                        .HasColumnType("float");

                    b.Property<int>("Idcouleur")
                        .HasColumnName("IDCouleur")
                        .HasColumnType("int");

                    b.Property<int>("Idfabricant")
                        .HasColumnName("IDFabricant")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<double>("Largeur")
                        .HasColumnType("float");

                    b.Property<double>("Longueur")
                        .HasColumnType("float");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<double>("Poids")
                        .HasColumnType("float");

                    b.Property<double>("Prix")
                        .HasColumnType("float");

                    b.Property<int>("Reference")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Idcouleur");

                    b.HasIndex("Idfabricant");

                    b.ToTable("Produit");
                });

            modelBuilder.Entity("Tirelire_Jamal.Models.Avis", b =>
                {
                    b.HasOne("Tirelire_Jamal.Models.Client", "IdclientNavigation")
                        .WithMany("Avis")
                        .HasForeignKey("Idclient")
                        .HasConstraintName("FK_Avis_Client")
                        .IsRequired();

                    b.HasOne("Tirelire_Jamal.Models.Produit", "IdproduitNavigation")
                        .WithMany("Avis")
                        .HasForeignKey("Idproduit")
                        .HasConstraintName("FK_Avis_Produit")
                        .IsRequired();
                });

            modelBuilder.Entity("Tirelire_Jamal.Models.Client", b =>
                {
                    b.HasOne("Tirelire_Jamal.Models.Adresse", "IdadresseNavigation")
                        .WithMany("Client")
                        .HasForeignKey("Idadresse")
                        .HasConstraintName("FK_Client_Adresse");
                });

            modelBuilder.Entity("Tirelire_Jamal.Models.Commande", b =>
                {
                    b.HasOne("Tirelire_Jamal.Models.Client", "IdclientNavigation")
                        .WithMany("Commande")
                        .HasForeignKey("Idclient")
                        .HasConstraintName("FK_Commande_Client");
                });

            modelBuilder.Entity("Tirelire_Jamal.Models.DetailCommande", b =>
                {
                    b.HasOne("Tirelire_Jamal.Models.Commande", "IdcommandeNavigation")
                        .WithMany("DetailCommande")
                        .HasForeignKey("Idcommande")
                        .HasConstraintName("FK_DetailCommande_Commande");

                    b.HasOne("Tirelire_Jamal.Models.Produit", "IdproduitNavigation")
                        .WithMany("DetailCommande")
                        .HasForeignKey("Idproduit")
                        .HasConstraintName("FK_DetailCommande_Produit")
                        .IsRequired();
                });

            modelBuilder.Entity("Tirelire_Jamal.Models.Produit", b =>
                {
                    b.HasOne("Tirelire_Jamal.Models.Couleur", "IdcouleurNavigation")
                        .WithMany("Produit")
                        .HasForeignKey("Idcouleur")
                        .HasConstraintName("FK_Produit_Couleur")
                        .IsRequired();

                    b.HasOne("Tirelire_Jamal.Models.Fabricant", "IdfabricantNavigation")
                        .WithMany("Produit")
                        .HasForeignKey("Idfabricant")
                        .HasConstraintName("FK_Produit_Fabricant")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
